// ../../lib/proscenium/ui/form/fields/select.jsx
import { useCallback, useState } from "react";
import PropTypes from "prop-types";
import exact from "prop-types-exact";
import SmartSelect, {
  propTypes as smartSelectPropTypes
} from "/Users/joelmoss/dev/proscenium-ui/test/dummy/hue/app/components/lib/smart_select";
import { Fragment, jsxDEV } from "react/jsx-dev-runtime";
var Component = ({ inputName, ...props }) => {
  const [selected, setSelected] = useState(() => {
    return Array.isArray(props.initialSelectedItem) ? props.initialSelectedItem : [props.initialSelectedItem];
  });
  const onChange = useCallback((values) => {
    if (Array.isArray(values)) {
      setSelected(values);
    } else {
      setSelected([values?.value]);
    }
  }, []);
  return /* @__PURE__ */ jsxDEV(Fragment, { children: [
    /* @__PURE__ */ jsxDEV(SmartSelect, { ...props, onChange }, void 0, false, {
      fileName: "../../lib/proscenium/ui/form/fields/select.jsx",
      lineNumber: 26,
      columnNumber: 7
    }),
    selected.length === 0 && /* @__PURE__ */ jsxDEV("input", { type: "hidden", name: inputName, value: "" }, void 0, false, {
      fileName: "../../lib/proscenium/ui/form/fields/select.jsx",
      lineNumber: 28,
      columnNumber: 33
    }),
    selected.map((item, i) => /* @__PURE__ */ jsxDEV(
      "input",
      {
        type: "hidden",
        name: inputName,
        value: item?.value || item || ""
      },
      item?.value || i,
      false,
      {
        fileName: "../../lib/proscenium/ui/form/fields/select.jsx",
        lineNumber: 30,
        columnNumber: 9
      }
    ))
  ] }, void 0, true, {
    fileName: "../../lib/proscenium/ui/form/fields/select.jsx",
    lineNumber: 25,
    columnNumber: 5
  });
};
Component.displayName = "Hue.Form.Fields.Select";
Component.propTypes = exact({
  inputName: PropTypes.string.isRequired,
  ...smartSelectPropTypes
});
var select_default = Component;
export {
  select_default as default
};
